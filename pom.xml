<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.github.gfernandez598</groupId>
	<artifactId>springwebflow-optforrepl</artifactId>
	<version>1.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>Spring Web Flow OptForRepl</name>
	<inceptionYear>2015</inceptionYear>
	<description>A set of classes aiming to improve Spring Web Flow's behavior for Optimized Session Replication</description>
	<url>http://gfernandez598.github.io/springwebflow-optforrepl/</url>

	<properties>
		<!-- Encodings -->
		<project.build.outputEncoding>UTF-8</project.build.outputEncoding>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- Java version -->
		<version.jdk>1.6</version.jdk>

		<!-- Libraries versions -->
		<version.junit>4.11</version.junit>
		<version.jacoco>0.7.4.201502262128</version.jacoco> <!-- also plugin version -->
		<version.springwebflow>2.4.1.RELEASE</version.springwebflow>

		<!-- Plugins versions -->
		<version.maven-compiler-plugin>3.1</version.maven-compiler-plugin>
		<version.maven-surefire-plugin>2.18.1</version.maven-surefire-plugin>
		<version.maven-surefire-report-plugin>2.18.1</version.maven-surefire-report-plugin>
		<version.findbugs-maven-plugin>3.0.1</version.findbugs-maven-plugin>
		<version.license-maven-plugin>1.8</version.license-maven-plugin>
		<version.maven-release-plugin>2.5.2</version.maven-release-plugin>
		<version.nexus-staging-maven-plugin>1.6.5</version.nexus-staging-maven-plugin>
		<version.maven-project-info-reports-plugin>2.8</version.maven-project-info-reports-plugin>
		<version.maven-site-plugin>3.4</version.maven-site-plugin>
		<version.site-maven-plugin>0.11</version.site-maven-plugin>
		<version.downloads-maven-plugin>0.6</version.downloads-maven-plugin>
		<version.maven-gpg-plugin>1.6</version.maven-gpg-plugin>
		<version.maven-javadoc-plugin>2.10.3</version.maven-javadoc-plugin>
		<version.maven-source-plugin>2.4</version.maven-source-plugin>
		<version.maven-jar-plugin>2.6</version.maven-jar-plugin>
	</properties>

	<organization>
		<name>gfernandez598</name>
		<url>http://github.com/gfernandez598</url>
	</organization>

	<licenses>
		<license>
			<name>The Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>gfernandez598</id>
			<name>Guillermo Fern√°ndez</name>
			<email>gfernandez598@gmail.com</email>
			<url>https://github.com/gfernandez598</url>
		</developer>
	</developers>

	<scm>
		<url>https://github.com/gfernandez598/springwebflow-optforrepl</url>
		<connection>scm:git:https://github.com/gfernandez598/springwebflow-optforrepl.git</connection>
		<developerConnection>scm:git:https://github.com/gfernandez598/springwebflow-optforrepl.git</developerConnection>
	  <tag>HEAD</tag>
  </scm>

	<issueManagement>
		<system>GitHub Issues Manager</system>
		<url>https://github.com/gfernandez598/springwebflow-optforrepl/issues</url>
	</issueManagement>

	<distributionManagement>
		<snapshotRepository>
			<id>sonatype-nexus-snapshots</id>
			<name>Nexus Snapshot Repository</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>nexus-releases</id>
			<name>Nexus Release Repository</name>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<dependencies>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${version.junit}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.webflow</groupId>
			<artifactId>spring-webflow</artifactId>
			<version>${version.springwebflow}</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>

			<!-- Set up java -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${version.maven-compiler-plugin}</version>
				<configuration>
					<source>${version.jdk}</source>
					<target>${version.jdk}</target>
				</configuration>
			</plugin>
			
			<!-- Just for add Manifest entries -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${version.maven-jar-plugin}</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
						<manifestEntries>
							<Built-By>${user.name}</Built-By>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<!-- Set up everything about test -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${version.maven-surefire-plugin}</version>
			</plugin>

			<!-- Generates test coverage report into "target/site/jacoco" directory -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${version.jacoco}</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- License - Can explicit force update copyright and description of 
				headers executing: mvn process-resources -Dlicense.canUpdateCopyright=true 
				-Dlicense.canUpdateDescription=true -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>${version.license-maven-plugin}</version>
				<configuration>
					<licenseName>apache_v2</licenseName>
				</configuration>
				<executions>
					<execution>
						<id>first</id>
						<phase>process-sources</phase>
						<goals>
							<goal>update-file-header</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Project's site -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${version.maven-site-plugin}</version>
				<configuration>
					<generateSitemap>true</generateSitemap>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.doxia</groupId>
						<artifactId>doxia-module-markdown</artifactId>
						<version>1.6</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- Release - To perform a release deployment to OSSRH and GitHub: "mvn 
				release:clean release:prepare" by answering the prompts for versions and 
				tags, followed by "mvn release:perform" -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>${version.maven-release-plugin}</version>
				<configuration>
					<tagNameFormat>v@{project.version}</tagNameFormat>
					<useReleaseProfile>false</useReleaseProfile>
					<releaseProfiles>generate-sources-and-javadocs,sign-artifacts</releaseProfiles>
					<goals>deploy site-deploy</goals>
				</configuration>
			</plugin>

			<!-- Sonatype Nexus configuration of release -->
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>${version.nexus-staging-maven-plugin}</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<!-- With the property autoReleaseAfterClose set to false you can manually 
						inspect the staging repository in Nexus and trigger a release of the staging 
						repository later with "mvn nexus-staging:release" -->
					<autoReleaseAfterClose>false</autoReleaseAfterClose>
				</configuration>
			</plugin>

			<!-- Upload release to GitHub -->
			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>downloads-maven-plugin</artifactId>
				<version>${version.downloads-maven-plugin}</version>
				<configuration>
					<server>github.com</server>
					<description>${project.version} release of ${project.name}</description>
					<override>true</override>
					<includeAttached>true</includeAttached>
				</configuration>
				<executions>
					<execution>
						<phase>deploy</phase>
						<goals>
							<goal>upload</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Publish site to GitHub pages -->
			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>${version.site-maven-plugin}</version>
				<configuration>
					<server>github.com</server>
					<description>Official ${project.name} build of the
						${project.version} release</description>
					<message>Building site for ${project.version}</message>
				</configuration>
				<executions>
					<execution>
						<phase>site-deploy</phase>
						<goals>
							<goal>site</goal> <!-- site goal uploads to ghpages -->
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>

		<pluginManagement>
			<plugins>

				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>
											jacoco-maven-plugin
										</artifactId>
										<versionRange>
											[0.7.4.201502262128,)
										</versionRange>
										<goals>
											<goal>prepare-agent</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>license-maven-plugin</artifactId>
										<versionRange>[1.8,)</versionRange>
										<goals>
											<goal>update-file-header</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${version.maven-surefire-report-plugin}</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>${version.findbugs-maven-plugin}</version>
				<configuration>
					<!-- Enables analysis which takes more memory but finds more bugs. If 
						you run out of memory, changes the value of the effort element to 'Low'. -->
					<effort>Max</effort>
					<!-- Reports all bugs (other values are Medium and Max) -->
					<threshold>Low</threshold>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${version.jacoco}</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>${version.license-maven-plugin}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${version.maven-project-info-reports-plugin}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>index</report>
							<report>summary</report>
							<report>project-team</report>
							<report>scm</report>
							<report>issue-tracking</report>
							<report>mailing-list</report>
							<report>dependency-info</report>
							<report>dependency-management</report>
							<report>dependencies</report>
							<report>dependency-convergence</report>
							<!-- <report>cim</report> -->
							<!-- <report>plugin-management</report> -->
							<!-- <report>plugins</report> -->
							<!-- <report>distribution-management</report> -->
							<report>license</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>

	<profiles>

		<!-- Sign atrifact -->
		<profile>
			<id>sign-artifacts</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>${version.maven-gpg-plugin}</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Profile for generating sources and javadocs -->
		<profile>
			<id>generate-sources-and-javadocs</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>${version.maven-javadoc-plugin}</version>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>${version.maven-source-plugin}</version>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
